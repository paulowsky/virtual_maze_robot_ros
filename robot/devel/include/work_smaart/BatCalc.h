// Generated by gencpp from file work_smaart/BatCalc.msg
// DO NOT EDIT!


#ifndef WORK_SMAART_MESSAGE_BATCALC_H
#define WORK_SMAART_MESSAGE_BATCALC_H

#include <ros/service_traits.h>


#include <work_smaart/BatCalcRequest.h>
#include <work_smaart/BatCalcResponse.h>


namespace work_smaart
{

struct BatCalc
{

typedef BatCalcRequest Request;
typedef BatCalcResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct BatCalc
} // namespace work_smaart


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::work_smaart::BatCalc > {
  static const char* value()
  {
    return "2827f36d9d76178675d17a203abff3a2";
  }

  static const char* value(const ::work_smaart::BatCalc&) { return value(); }
};

template<>
struct DataType< ::work_smaart::BatCalc > {
  static const char* value()
  {
    return "work_smaart/BatCalc";
  }

  static const char* value(const ::work_smaart::BatCalc&) { return value(); }
};


// service_traits::MD5Sum< ::work_smaart::BatCalcRequest> should match
// service_traits::MD5Sum< ::work_smaart::BatCalc >
template<>
struct MD5Sum< ::work_smaart::BatCalcRequest>
{
  static const char* value()
  {
    return MD5Sum< ::work_smaart::BatCalc >::value();
  }
  static const char* value(const ::work_smaart::BatCalcRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::work_smaart::BatCalcRequest> should match
// service_traits::DataType< ::work_smaart::BatCalc >
template<>
struct DataType< ::work_smaart::BatCalcRequest>
{
  static const char* value()
  {
    return DataType< ::work_smaart::BatCalc >::value();
  }
  static const char* value(const ::work_smaart::BatCalcRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::work_smaart::BatCalcResponse> should match
// service_traits::MD5Sum< ::work_smaart::BatCalc >
template<>
struct MD5Sum< ::work_smaart::BatCalcResponse>
{
  static const char* value()
  {
    return MD5Sum< ::work_smaart::BatCalc >::value();
  }
  static const char* value(const ::work_smaart::BatCalcResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::work_smaart::BatCalcResponse> should match
// service_traits::DataType< ::work_smaart::BatCalc >
template<>
struct DataType< ::work_smaart::BatCalcResponse>
{
  static const char* value()
  {
    return DataType< ::work_smaart::BatCalc >::value();
  }
  static const char* value(const ::work_smaart::BatCalcResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // WORK_SMAART_MESSAGE_BATCALC_H
