;; Auto-generated. Do not edit!


(when (boundp 'work_smaart::goalPositionFeedback)
  (if (not (find-package "WORK_SMAART"))
    (make-package "WORK_SMAART"))
  (shadow 'goalPositionFeedback (find-package "WORK_SMAART")))
(unless (find-package "WORK_SMAART::GOALPOSITIONFEEDBACK")
  (make-package "WORK_SMAART::GOALPOSITIONFEEDBACK"))

(in-package "ROS")
;;//! \htmlinclude goalPositionFeedback.msg.html


(defclass work_smaart::goalPositionFeedback
  :super ros::object
  :slots (_NextMoveDirection ))

(defmethod work_smaart::goalPositionFeedback
  (:init
   (&key
    ((:NextMoveDirection __NextMoveDirection) 0)
    )
   (send-super :init)
   (setq _NextMoveDirection (round __NextMoveDirection))
   self)
  (:NextMoveDirection
   (&optional __NextMoveDirection)
   (if __NextMoveDirection (setq _NextMoveDirection __NextMoveDirection)) _NextMoveDirection)
  (:serialization-length
   ()
   (+
    ;; uint32 _NextMoveDirection
    4
    ))
  (:serialize
   (&optional strm)
   (let ((s (if strm strm
              (make-string-output-stream (send self :serialization-length)))))
     ;; uint32 _NextMoveDirection
       (write-long _NextMoveDirection s)
     ;;
     (if (null strm) (get-output-stream-string s))))
  (:deserialize
   (buf &optional (ptr- 0))
   ;; uint32 _NextMoveDirection
     (setq _NextMoveDirection (sys::peek buf ptr- :integer)) (incf ptr- 4)
   ;;
   self)
  )

(setf (get work_smaart::goalPositionFeedback :md5sum-) "d83087dbb64ce5212281da01fb5b9627")
(setf (get work_smaart::goalPositionFeedback :datatype-) "work_smaart/goalPositionFeedback")
(setf (get work_smaart::goalPositionFeedback :definition-)
      "# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======
#define a feedback message
uint32 NextMoveDirection # 0=N (norte), 1=E (leste), 2=S (sul), 3=W (oeste)

")



(provide :work_smaart/goalPositionFeedback "d83087dbb64ce5212281da01fb5b9627")


